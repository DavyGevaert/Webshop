@page "/"

@using Webshop.Model;
@using Webshop.Sdk;

@inject ItemApi _itemApi;
@inject CartState _cartState;

@if (Items is null)
{
	<div>Loading...</div>
}
else
{
    <div class="container mt-5">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-6 g-4">
            <!-- Repeat this card 6 times -->
        
			@foreach (var item in Items)
			{
				<div class="col">
					<div class="card h-100">

						<img class="card-img-top" src="@item.ImageURL" alt="@item.ImageURL" height="250px" width="200px" />

						<div class="card-body">
							<h5 class="card-title"><a href="/details/@item.Id">@item.Title</a></h5>
							<p class="card-text">
								<b>@item.Price.ToString("C")</b>
								<br/>
								<b>Current stock: @item.CurrentInStock</b>
								<br/>
								<b>Quantity: @item.Quantity</b>
							</p>
                        </div>

						<div class="card-footer">
                        <button class="btn btn-primary" type="button"
                                @onclick="() => BuyItem(item)" disabled="@item.OutOfStock">
                            @item.ButtonText
                        </button>
						</div>

					</div>
				</div>

			}
		</div>
    </div>

	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

}

@code {
	private IList<Item> Items { get; set; } = new List<Item>();

	protected override async Task OnInitializedAsync()
	{
		await LoadItems();
	}

	private async Task LoadItems()
	{
		Items = await _itemApi.FindAsync();
	}

	private async Task BuyItem(Item item)
	{
		await _cartState.AddItemToBasket(item);
		await LoadItems();
	}
}