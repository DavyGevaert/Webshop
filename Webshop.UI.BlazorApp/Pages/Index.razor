@page "/"

@using Webshop.Model;
@using Webshop.Sdk;

@inject BlurayApi _blurayApi;
@inject CartState _cartState;

@if (Blurays is null)
{
	<div>Loading...</div>
}
else
{
	<div class="container-fluid content-row">
		<div class="row">
			@foreach (var bluray in Blurays)
			{
				<div class="col-lg-3 col-md-6" style="margin-bottom: 20px;">
					<div class="card h-100" style="width: 20rem;">
                        <p style="text-align:center; margin-top: 20px">
						<img class="img-thumbnail" src="@bluray.ImageURL" alt="@bluray.ImageURL"
								height="250px" width="200px"
						>
						</p>
								
						<div class="card-body text-center">
							<h5 class="card-title mb-3">
								<a href="/details/@bluray.Id">@bluray.Title</a>
							</h5>
							<p class="card-text">
								<b>@bluray.Price.ToString("C")</b>
							</p>
							<button class="btn btn-primary" type="button" 
								@onclick="() => BuyItem(bluray.Id)">
								Buy
							</button>
						</div>
					</div>
				</div>
			}
		</div>
	</div>
}

@code {
	private IList<Bluray> Blurays { get; set; } = new List<Bluray>();

	protected override async Task OnInitializedAsync()
	{
		await LoadBlurays();
	}

	private async Task LoadBlurays()
	{
		Blurays = await _blurayApi.FindAsync();
	}

	private async Task BuyItem(int id)
	{
		await _cartState.AddItemToCartAsync(id);
	}
}