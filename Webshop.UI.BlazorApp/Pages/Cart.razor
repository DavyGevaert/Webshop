@page "/cart"

@using Webshop.Model;
@using Webshop.Sdk;

@inject CartState _cartState;
@inject NavigationManager NavManager

<h3>Shopping Cart</h3>

	@foreach (var item in _cartState.Basket)
	{
		<div class="row" style="margin-bottom:2rem;">
			<div class="col-md-1">
					<img src="@item.ImageURL" width="200" class="img-thumbnail">
			</div>
			<div class="col">
					<h5>@item.Title</h5>
					<div class="mb-4">@item.Description</div>
					<span>Price: <b>@item.Price.ToString("C")</b></span>
					<div>
						<a class="btn btn-warning" @onclick="() => Decrement(item)">- 1</a>
						<a class="btn btn-success" @onclick="() => Increment(item)">+ 1</a>
					</div>
					<div>
						Quantity: @item.Quantity
					</div>
			</div>
			
		</div>
	}
	<button @onclick="() => Checkout()">Checkout</button>

@code {
	void Increment(Item item)
	{
		item.Quantity += 1;
	}

	void Decrement(Item item)
	{
		if (item.Quantity <= 0)
		{
			RemoveItemFromBasket_If_Customer_Decrement_Quantity_Below_0(item);
		}
		else
		{
			item.Quantity -= 1;
		}
	}

	async Task Checkout()
	{
		// update stock in Web Api
		await _cartState.UpdateStock();

		// start with a new List<Item> for a new basket
		_cartState.Basket = new List<Item>();

		// redirect to Home Page
		NavManager.NavigateTo("/");
	}

	void RemoveItemFromBasket_If_Customer_Decrement_Quantity_Below_0(Item item)
	{
		_cartState.Basket.Remove(item);
	}
}
